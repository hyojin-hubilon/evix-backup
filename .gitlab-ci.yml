# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

stages:          # List of stages for jobs, and their order of execution
  - build
  - deploy

dev_build:       # This job runs in the build stage, which runs first.
  stage: build
  only:
    - v1/develop
  script:
    - echo "Compiling the code..."
    - docker build -t ecoa-frontend:1.0.1 .
    - echo "Compile complete."

dev_package:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.  
  only:
    - v1/develop
  variables:
    IMAGE_NAME: ecoa-frontend
    TAG: $CI_COMMIT_REF_NAME
  before_script:
    - docker login $PRI_DOCKER_REPO -u $PRI_DOCKER_USER -p $PRI_DOCKER_PW
  script:
    - echo "Package application..."
  #  - docker build -t $IMAGE_NAME:$TAG .
    - docker tag ecoa-frontend:1.0.1 icn.ocir.io/cnahm0uo3g0f/evix-dct/ecoa-frontend:1.0.1
    - docker push icn.ocir.io/cnahm0uo3g0f/evix-dct/ecoa-frontend:1.0.1
  #  - docker push $IMAGE_NAME:$TAG
    - echo "Application successfully deployed."
  after_script:
    - docker logout
